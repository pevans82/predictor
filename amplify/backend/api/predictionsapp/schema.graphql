type Note @model {
  id: ID!
  name: String!
  description: String
}

type Round @model @key(name: "byStatus", fields: ["status"], queryField: "getRoundByStatus") {
  id: ID!
  number: Int
  homeTeam: Team! @connection(keyName: "RoundHomeTeam")
  awayTeam: Team! @connection(keyName: "RoundAwayTeam")
  kickOff: AWSDateTime!
  status: RoundStatus!
}

enum RoundStatus {
  pending
  active
  inPlay
  closed
}

type Team @model {
  id: ID!
  name: String!
  badgeSrc: String
  ground: String
}

#
#type Prediction @model {
#  id: ID!
#  username: String!
#  round: Round
#  leighScore: Int
#  opponentScore: Int
#}
#
#type Result @model {
#  id: ID!
#  round: Round
#  leighScore: Int
#  opponentScore: Int
#}
#
#type Ranking @model {
#  id: ID!
#  username: String!
#  points: Int
#}