type Round @model
    @auth(rules: [
        {allow: public, operations: [read]},
        {allow: private, operations: [read]},
        {allow: groups, groups:["admin"], operations: [create, update, delete, read]}
    ])
    @key(name: "byStatus", fields: ["status"], queryField: "roundByStatus")
{
    id: ID!
    number: Int
    homeTeam: Team! @connection(keyName: "RoundHomeTeam")
    awayTeam: Team! @connection(keyName: "RoundAwayTeam")
    kickOff: AWSDateTime!
    status: RoundStatus!
}

enum RoundStatus {
    pending
    active
    inPlay
    closed
}

type Team @model
    @auth(rules: [
        {allow: public, operations: [read]},
        {allow: private, operations: [read]},
        {allow: groups, groups:["admin"], operations: [create, update, delete, read]}
    ])
{
    id: ID!
    name: String!
    badgeSrc: String
    ground: String
}

type Prediction @model
    @auth(rules: [
        { allow: owner },
        {allow: groups, groups:["admin"], operations: [read]}
    ])
    @key(name: "byRound", fields: ["roundId"], queryField: "predictionsByRound")
{
    id: ID!
    roundId: ID!
    homeScore: Int!
    awayScore: Int!
}

#type Result @model {
#  id: ID!
#  round: Round
#  leighScore: Int
#  opponentScore: Int
#}
#
#type Ranking @model {
#  id: ID!
#  username: String!
#  points: Int
#}